#!python

import argparse
import importlib.resources
import os.path
import subprocess


def main():
    parser = argparse.ArgumentParser(description="Resolve all macros in a LaTeX string")
    parser.add_argument(
        "texstr", nargs=1, type=str, help="LaTeX input or file (string)."
    )

    args = parser.parse_args()

    # if input is a file, read it in
    texstr = args.texstr[0]
    if os.path.exists(texstr):
        with open(texstr, "r") as f:
            texstr = f.read()

    # read in preamble
    preamble_path = os.path.join(
        importlib.resources.files("miscpy.utils"), "latex_preamble.tex"
    )
    assert os.path.exists(preamble_path), "Cannot locate preamble file on disk"
    with open(preamble_path, "r") as f:
        preamble = f.read()

    # strip leading/trailing $
    preamble = preamble.strip("$\n")

    # synthesize tex
    tex = (
        "\\documentclass[11pt]{amsart}\n"
        "\\usepackage{amssymb,amsmath,amsthm,mathrsfs}\n"
    )
    tex += preamble
    tex += "\n\\begin{document}\n"
    tex += texstr
    tex += "\n\\end{document}\n"

    comm = ["pandoc", "-f", "latex", "-t", "latex"]
    process = subprocess.Popen(comm, stdin=subprocess.PIPE, stdout=subprocess.PIPE)
    res, err = process.communicate(input=tex.encode("utf-8"))
    assert err is None, "pandoc conversion failed."

    print(res.decode("utf-8"))


if __name__ == "__main__":
    main()
